Read @PRD.md  @ARCHITECTURE.md @CHANGELOG.md

What's a reasonable increment of work to do next?

1. Explain all of the work that needs to happen to successfully accomplish the next set of requirements. Explain clearly the body of work you seek to accomplish and the outcomes.
1b. Explain which parts of the app the changes will touch: which classes and which files?
2. Don't trust the markdown documents. Read the code as it is today on disk to understand its state and reason about it.
3. Create a detailed plan, step by step on changes needed. Show it to me.
4. Where are the soft spots in your analysis? Enumerate them to me.
5. Read the rest of the files on disk required to harden the soft spots. Ensure you know each and every API that will be affected by your changes and have read the actual files on disk and know them before moving to the next step.
6. Implement the required changes.
7. Come up with a plan to test the changes. Implement the tests.
8. Build with verbose output and fix any build errors.
9. Run all the tests with verbose output and fix any test errors.
10. Update CHANGELOG.md, PRD.md, and ARCHITECTURE.md with any relevant changes. Document the detailed work you did, deviations from plan, code smells, shortcuts etc
11. Use your tools to do a git commit of everything changed. Ensure the comment is a one-liner. Then git push.

If you skip any step, you will be chastised. For instance, if you try to provide a plan before reading the code, a puppy dies.

In the beginning of your first message, repeat these numbered steps and then follow them to the letter.